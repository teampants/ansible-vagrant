---
- name: Ensure vagrant project directory exists
  local_action:
    module: file
    path: "{{ vagrant_project_dir }}"
    state: directory
  sudo: no

- name: Process Vagrantfile template
  local_action:
    module: template
    src: Vagrantfile.j2
    dest: "{{ vagrant_project_dir }}/Vagrantfile"
  sudo: no

- name: Ensure vagrant vm is up
  local_action:
    module: shell vagrant up
    chdir: "{{ vagrant_project_dir }}"
  sudo: no
  register: vagrant_action_out
  when: vagrant_action == "up"

- name: Set SSH key to use when connecting to the new host
  local_action:
    module: set_fact
    ansible_ssh_user: vagrant
    ansible_ssh_private_key_file: "{{ vagrant_project_dir }}/.vagrant/machines/default/virtualbox/private_key"
  sudo: no
  when: vagrant_action == "up"

- name: Add host to local /etc/hosts
  local_action:
    module: lineinfile
    dest: /etc/hosts
    line: "{{ vagrant_private_network_ip }} {{ inventory_hostname }}"
  sudo: yes
  when: vagrant_add_to_local_etc_hosts and vagrant_action == "up"

- name: Gather facts
  setup:
  when: vagrant_action == "up"

- name: Add vagrant hosts in configured groups to instance's /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item]['vagrant_private_network_ip'] }} {{ item }}"
  with_flattened: "{{ vagrant_etc_hosts_groups }}"
  sudo: yes
  when: vagrant_action == "up"

- name: Tear down host
  local_action:
    module: shell vagrant destroy -f
    chdir: "{{ vagrant_project_dir }}"
  sudo: no
  register: vagrant_action_out
  when: vagrant_action == "destroy"

- name: Debug vagrant_action_out.stdout_lines
  local_action:
    module: debug
    var: vagrant_action_out.stdout_lines
  sudo: no
  tags: debug
